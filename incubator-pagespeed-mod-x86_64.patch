diff --git a/install/build_psol.sh b/install/build_psol.sh
index 66b848c6f..5cee5fbf7 100755
--- a/install/build_psol.sh
+++ b/install/build_psol.sh
@@ -19,7 +19,7 @@
 # Builds psol tarball from a mod_pagespeed checkout.
 
 cd $(dirname "$BASH_SOURCE")/..
-source install/build_env.sh || exit 1
+#source install/build_env.sh || exit 1
 
 buildtype=Release
 install_deps=true
@@ -52,25 +52,23 @@ fi
 
 if $install_deps; then
   echo Installing required packages...
-  run_with_log log/install_deps.log \
     sudo install/install_required_packages.sh --additional_dev_packages
 fi
 
 echo Building PSOL binaries...
 
-MAKE_ARGS=(V=1 BUILDTYPE=$buildtype)
+MAKE_ARGS=(V=1 -j$(nproc) BUILDTYPE=$buildtype)
 
-run_with_log log/gyp.log python build/gyp_chromium --depth=.
+ python build/gyp_chromium --depth=.
 
 if $run_tests; then
-  run_with_log log/psol_build.log make "${MAKE_ARGS[@]}" \
+   make "${MAKE_ARGS[@]}" \
     mod_pagespeed_test pagespeed_automatic_test
 fi
 
 # Using a subshell to contain the cd.
 mps_root=$PWD
 (cd pagespeed/automatic && \
-  run_with_log ../../log/psol_automatic_build.log \
   make "${MAKE_ARGS[@]}" MOD_PAGESPEED_ROOT=$mps_root \
   CXXFLAGS="-DSERF_HTTPS_FETCHING=1" all)

diff --git a/third_party/grpc/src/src/core/lib/support/log_linux.c b/third_party/grpc/src/src/core/lib/support/log_linux.c
index 61d2346427..6aac95865f 100644
--- a/third_party/grpc/src/src/core/lib/support/log_linux.c
+++ b/third_party/grpc/src/src/core/lib/support/log_linux.c
@@ -39,7 +39,7 @@
 #include <time.h>
 #include <unistd.h>
 
-static long gettid(void) { return syscall(__NR_gettid); }
+static long sys_gettid(void) { return syscall(__NR_gettid); }
 
 void gpr_log(const char *file, int line, gpr_log_severity severity,
              const char *format, ...) {
@@ -65,7 +65,7 @@ void gpr_default_log(gpr_log_func_args *args) {
   gpr_timespec now = gpr_now(GPR_CLOCK_REALTIME);
   struct tm tm;
   static __thread long tid = 0;
-  if (tid == 0) tid = gettid();
+  if (tid == 0) tid = sys_gettid();
 
   timer = (time_t)now.tv_sec;
   final_slash = strrchr(args->file, '/');

diff --git a/third_party/grpc/src/src/core/lib/support/log_posix.c b/third_party/grpc/src/src/core/lib/support/log_posix.c
index 8b376fce41..2d29e79635 100644
--- a/third_party/grpc/src/src/core/lib/support/log_posix.c
+++ b/third_party/grpc/src/src/core/lib/support/log_posix.c
@@ -31,7 +31,7 @@
 #include <string.h>
 #include <time.h>
 
-static intptr_t gettid(void) { return (intptr_t)pthread_self(); }
+static intptr_t sys_gettid(void) { return (intptr_t)pthread_self(); }
 
 void gpr_log(const char *file, int line, gpr_log_severity severity,
              const char *format, ...) {
@@ -82,7 +82,7 @@ void gpr_default_log(gpr_log_func_args *args) {
   char *prefix;
   gpr_asprintf(&prefix, "%s%s.%09d %7tu %s:%d]",
                gpr_log_severity_string(args->severity), time_buffer,
-               (int)(now.tv_nsec), gettid(), display_file, args->line);
+               (int)(now.tv_nsec), sys_gettid(), display_file, args->line);
 
   fprintf(stderr, "%-70s %s\n", prefix, args->message);
   gpr_free(prefix);

diff --git a/third_party/apr/src/locks/unix/proc_mutex.c b/third_party/apr/src/locks/unix/proc_mutex.c
index 8fa050af2..85738c9a9 100644
--- a/third_party/apr/src/locks/unix/proc_mutex.c
+++ b/third_party/apr/src/locks/unix/proc_mutex.c
@@ -544,7 +544,7 @@ static apr_status_t proc_mutex_pthread_acquire(apr_proc_mutex_t *mutex)
         /* Okay, our owner died.  Let's try to make it consistent again. */
         if (rv == EOWNERDEAD) {
             proc_pthread_mutex_dec(mutex);
-            pthread_mutex_consistent_np(mutex->os.pthread_interproc);
+            pthread_mutex_consistent(mutex->os.pthread_interproc);
         }
         else
 #endif
@@ -569,7 +569,7 @@ static apr_status_t proc_mutex_pthread_tryacquire(apr_proc_mutex_t *mutex)
         /* Okay, our owner died.  Let's try to make it consistent again. */
         if (rv == EOWNERDEAD) {
             proc_pthread_mutex_dec(mutex);
-            pthread_mutex_consistent_np(mutex->os.pthread_interproc);
+            pthread_mutex_consistent(mutex->os.pthread_interproc);
         }
         else
 #endif

diff --git a/net/instaweb/rewriter/critical_css_loader.js b/net/instaweb/rewriter/critical_css_loader.js
index 0fea1111d7..981a70b8b2 100644
--- a/net/instaweb/rewriter/critical_css_loader.js
+++ b/net/instaweb/rewriter/critical_css_loader.js
@@ -39,11 +39,16 @@ pagespeed.CriticalCssLoader.addAllStyles = function() {
 
   var elements = document.getElementsByClassName('psa_add_styles');
 
+  
   for (var i = 0, e; e = elements[i]; ++i) {
     if (e.nodeName != 'NOSCRIPT') { continue; }
     var div = document.createElement('div');
     div.innerHTML = e.textContent;
-    document.body.appendChild(div);
+    var children = div.childNodes;
+    for (var v = 0; v < children.length; ++v) {
+      children[v].removeAttribute('id');
+    }  
+  document.body.appendChild(div);
   }
 };

diff --git a/net/instaweb/rewriter/critical_css_loader.js b/net/instaweb/rewriter/critical_css_loader.js
index 981a70b8b2..bdb6fa0862 100644
--- a/net/instaweb/rewriter/critical_css_loader.js
+++ b/net/instaweb/rewriter/critical_css_loader.js
@@ -48,7 +48,7 @@ pagespeed.CriticalCssLoader.addAllStyles = function() {
     for (var v = 0; v < children.length; ++v) {
       children[v].removeAttribute('id');
     }  
-  document.body.appendChild(div);
+    document.body.appendChild(div);
   }
 };

diff --git a/pagespeed/kernel/http/user_agent_matcher.cc b/pagespeed/kernel/http/user_agent_matcher.cc
index 62a6364f23..58439f2d68 100644
--- a/pagespeed/kernel/http/user_agent_matcher.cc
+++ b/pagespeed/kernel/http/user_agent_matcher.cc
@@ -133,6 +133,12 @@ const char* kDeferJSMobileWhitelist[] = {
 //     "Firefox" in the user agent.
 const char* kLegacyWebpWhitelist[] = {
   "*Android *",
+  "*Firefox/66.*",
+  "*Firefox/67.*",
+  "*Firefox/68.*",
+  "*Firefox/69.*",
+  "*Firefox/70.*",
+  "*Firefox/71.*", // These Firefox versions are webp capable but donÂ´t send webp header
 };
 
 // Based on https://github.com/apache/incubator-pagespeed-mod/issues/978,
@@ -150,6 +156,17 @@ const char* kLegacyWebpBlacklist[] = {
   "*Windows Phone*",
   "*Chrome/*",       // Genuine Chrome always sends Accept: webp.
   "*CriOS/*",        // Paranoia: we should not see Android and CriOS together.
+  "*Firefox/?.*",
+  "*Firefox/1?.*",
+  "*Firefox/2?.*",
+  "*Firefox/3?.*",
+  "*Firefox/4?.*",
+  "*Firefox/5?.*",
+  "*Firefox/60.*",
+  "*Firefox/61.*",
+  "*Firefox/62.*",
+  "*Firefox/63.*",
+  "*Firefox/64.*",  // Firefox versions not webp capables
 };
 
 // To determine lossless webp support and animated webp support, we must
@@ -161,6 +178,7 @@ const char* kWebpLosslessAlphaWhitelist[] = {
   // User agent used only for internal testing.
   "webp-la",
   "webp-animated",
+  "*Firefox/*", // Do this way to permit Firefox webcapable to convert png
 };
 
 const char* kWebpLosslessAlphaBlacklist[] = {
@@ -179,6 +197,17 @@ const char* kWebpLosslessAlphaBlacklist[] = {
   "*CriOS/26.*",
   "*CriOS/27.*",
   "*CriOS/28.*",
+  "*Firefox/?.*",
+  "*Firefox/1?.*",
+  "*Firefox/2?.*",
+  "*Firefox/3?.*",
+  "*Firefox/4?.*",
+  "*Firefox/5?.*",
+  "*Firefox/60.*",
+  "*Firefox/61.*",
+  "*Firefox/62.*",
+  "*Firefox/63.*",
+  "*Firefox/64.*", // Black list Firefox not webp capable
 };
 
 // Animated WebP is supported by browsers based on Chromium v32+, including
@@ -190,6 +219,7 @@ const char* kWebpAnimatedWhitelist[] = {
   "*Chrome/??.*",
   "*CriOS/??.*",
   "webp-animated",  // User agent for internal testing.
+  "*Firefox/*",
 };
 
 const char* kWebpAnimatedBlacklist[] = {
@@ -203,6 +233,17 @@ const char* kWebpAnimatedBlacklist[] = {
   "*CriOS/2?.*",
   "*CriOS/30.*",
   "*CriOS/31.*",
+  "*Firefox/?.*",
+  "*Firefox/1?.*",
+  "*Firefox/2?.*",
+  "*Firefox/3?.*",
+  "*Firefox/4?.*",
+  "*Firefox/5?.*",
+  "*Firefox/60.*",
+  "*Firefox/61.*",
+  "*Firefox/62.*",
+  "*Firefox/63.*",
+  "*Firefox/64.*",
 };
 
 const char* kInsertDnsPrefetchWhitelist[] = {
diff --git a/pagespeed/kernel/http/user_agent_matcher_test.cc b/pagespeed/kernel/http/user_agent_matcher_test.cc
index 570a4923aa..4f76baf6f5 100644
--- a/pagespeed/kernel/http/user_agent_matcher_test.cc
+++ b/pagespeed/kernel/http/user_agent_matcher_test.cc
@@ -397,6 +397,8 @@ TEST_F(UserAgentMatcherTest, SupportsWebpLosslessAlpha) {
       kPagespeedInsightsMobileUserAgent));
   EXPECT_TRUE(user_agent_matcher_->SupportsWebpLosslessAlpha(
       kPagespeedInsightsDesktopUserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpLosslessAlpha(
+      kFirefox7UserAgent));
 }
 
 TEST_F(UserAgentMatcherTest, DoesntSupportWebpLosslessAlpha) {
@@ -495,6 +497,8 @@ TEST_F(UserAgentMatcherTest, SupportsAnimatedWebp) {
       kOpera19UserAgent));
   EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
       kChrome37UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
+      kFirefox7UserAgent));
 }
 
 TEST_F(UserAgentMatcherTest, DoesntSupportAnimatedWebp) {
diff --git a/pagespeed/kernel/http/user_agent_matcher_test_base.cc b/pagespeed/kernel/http/user_agent_matcher_test_base.cc
index bdba09c793..1c975f9375 100644
--- a/pagespeed/kernel/http/user_agent_matcher_test_base.cc
+++ b/pagespeed/kernel/http/user_agent_matcher_test_base.cc
@@ -128,6 +128,8 @@ const char UserAgentMatcherTestBase::kFirefox42AndroidUserAgent[] =
     "Mozilla/5.0 (Android 5.0.1; Mobile; rv:42.0) Gecko/42.0 Firefox/42.0";
 const char UserAgentMatcherTestBase::kFirefox5UserAgent[] =
     "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0";
+const char UserAgentMatcherTestBase::kFirefox7UserAgent[] =
+    "Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/72.0"; //webp capable
 const char UserAgentMatcherTestBase::kFirefoxMobileUserAgent[] =
     "Mozilla/5.0 (Android; Mobile; rv:38.0) Gecko/38.0 Firefox/38.0";
 const char UserAgentMatcherTestBase::kFirefoxNokiaN800[] =
diff --git a/pagespeed/kernel/http/user_agent_matcher_test_base.h b/pagespeed/kernel/http/user_agent_matcher_test_base.h
index f1b146326b..0ca66d0db9 100644
--- a/pagespeed/kernel/http/user_agent_matcher_test_base.h
+++ b/pagespeed/kernel/http/user_agent_matcher_test_base.h
@@ -67,6 +67,7 @@ class UserAgentMatcherTestBase : public testing::Test {
   static const char kFirefox3UserAgent[];
   static const char kFirefox42AndroidUserAgent[];
   static const char kFirefox5UserAgent[];
+  static const char kFirefox7UserAgent[];
   static const char kFirefoxMobileUserAgent[];
   static const char kFirefoxNokiaN800[];
   static const char kFirefoxUserAgent[];

diff --git a/pagespeed/kernel/http/user_agent_matcher.cc b/pagespeed/kernel/http/user_agent_matcher.cc
index c99df45136..d98fc6c6bd 100644
--- a/pagespeed/kernel/http/user_agent_matcher.cc
+++ b/pagespeed/kernel/http/user_agent_matcher.cc
@@ -112,13 +112,9 @@ const char* kDeferJSMobileWhitelist[] = {
 //  2. Recent Opera support WebP, and some Opera have both "Opera" and
 //     "Firefox" in the user agent.
 const char* kLegacyWebpWhitelist[] = {
-  "*Android *",
-  "*Firefox/66.*",
-  "*Firefox/67.*",
-  "*Firefox/68.*",
-  "*Firefox/69.*",
-  "*Firefox/70.*",
-  "*Firefox/71.*", // These Firefox versions are webp capable but donÂ´t send webp header
+    "*Android *",    "*Firefox/66.*", "*Firefox/67.*",
+    "*Firefox/68.*", "*Firefox/69.*", "*Firefox/70.*",
+    "*Firefox/71.*",  // These Firefox versions are webp capable but donÂ´t send webp header
 };
 
 // Based on https://github.com/apache/incubator-pagespeed-mod/issues/978,
@@ -126,68 +122,34 @@ const char* kLegacyWebpWhitelist[] = {
 // https://groups.google.com/forum/?utm_medium=email&utm_source=footer#!msg/mod-pagespeed-discuss/HYzzdOzJu_k/ftdV8koVgUEJ
 // a browser called Midori might (at some point) masquerade as Chrome as well.
 const char* kLegacyWebpBlacklist[] = {
-  "*Android 0.*",
-  "*Android 1.*",
-  "*Android 2.*",
-  "*Android 3.*",
-  "*Firefox/*",
-  "*Edge/*",
-  "*Trident/*",
-  "*Windows Phone*",
-  "*Chrome/*",       // Genuine Chrome always sends Accept: webp.
-  "*CriOS/*",        // Paranoia: we should not see Android and CriOS together.
-  "*Firefox/?.*",
-  "*Firefox/1?.*",
-  "*Firefox/2?.*",
-  "*Firefox/3?.*",
-  "*Firefox/4?.*",
-  "*Firefox/5?.*",
-  "*Firefox/60.*",
-  "*Firefox/61.*",
-  "*Firefox/62.*",
-  "*Firefox/63.*",
-  "*Firefox/64.*",  // Firefox versions not webp capables
+    "*Android 0.*",  "*Android 1.*",  "*Android 2.*",  "*Android 3.*",
+    "*Firefox/*",    "*Edge/*",       "*Trident/*",    "*Windows Phone*",
+    "*Chrome/*",  // Genuine Chrome always sends Accept: webp.
+    "*CriOS/*",   // Paranoia: we should not see Android and CriOS together.
+    "*Firefox/?.*",  "*Firefox/1?.*", "*Firefox/2?.*", "*Firefox/3?.*",
+    "*Firefox/4?.*", "*Firefox/5?.*", "*Firefox/60.*", "*Firefox/61.*",
+    "*Firefox/62.*", "*Firefox/63.*",
+    "*Firefox/64.*",  // Firefox versions not webp capables
 };
 
 // To determine lossless webp support and animated webp support, we must
 // examine the UA.
 const char* kWebpLosslessAlphaWhitelist[] = {
-  "*Chrome/??.*",
-  "*Chrome/???.*",
-  "*CriOS/??.*",
-  // User agent used only for internal testing.
-  "webp-la",
-  "webp-animated",
-  "*Firefox/*", // Do this way to permit Firefox webcapable to convert png
+    "*Chrome/??.*", "*Chrome/???.*", "*CriOS/??.*",
+    // User agent used only for internal testing.
+    "webp-la", "webp-animated",
+    "*Firefox/*",  // Do this way to permit Firefox webcapable to convert png
 };
 
 const char* kWebpLosslessAlphaBlacklist[] = {
-  "*Chrome/?.*",
-  "*Chrome/1?.*",
-  "*Chrome/20.*",
-  "*Chrome/21.*",
-  "*Chrome/22.*",
-  "*CriOS/1?.*",
-  "*CriOS/20.*",
-  "*CriOS/21.*",
-  "*CriOS/22.*",
-  "*CriOS/23.*",
-  "*CriOS/24.*",
-  "*CriOS/25.*",
-  "*CriOS/26.*",
-  "*CriOS/27.*",
-  "*CriOS/28.*",
-  "*Firefox/?.*",
-  "*Firefox/1?.*",
-  "*Firefox/2?.*",
-  "*Firefox/3?.*",
-  "*Firefox/4?.*",
-  "*Firefox/5?.*",
-  "*Firefox/60.*",
-  "*Firefox/61.*",
-  "*Firefox/62.*",
-  "*Firefox/63.*",
-  "*Firefox/64.*", // Black list Firefox not webp capable
+    "*Chrome/?.*",   "*Chrome/1?.*",  "*Chrome/20.*",  "*Chrome/21.*",
+    "*Chrome/22.*",  "*CriOS/1?.*",   "*CriOS/20.*",   "*CriOS/21.*",
+    "*CriOS/22.*",   "*CriOS/23.*",   "*CriOS/24.*",   "*CriOS/25.*",
+    "*CriOS/26.*",   "*CriOS/27.*",   "*CriOS/28.*",   "*Firefox/?.*",
+    "*Firefox/1?.*", "*Firefox/2?.*", "*Firefox/3?.*", "*Firefox/4?.*",
+    "*Firefox/5?.*", "*Firefox/60.*", "*Firefox/61.*", "*Firefox/62.*",
+    "*Firefox/63.*",
+    "*Firefox/64.*",  // Black list Firefox not webp capable
 };
 
 // Animated WebP is supported by browsers based on Chromium v32+, including
@@ -196,34 +158,19 @@ const char* kWebpLosslessAlphaBlacklist[] = {
 // also cover Opera 19+.
 // [1] https://dev.opera.com/blog/opera-user-agent-strings-opera-15-and-beyond/
 const char* kWebpAnimatedWhitelist[] = {
-  "*Chrome/??.*",
-  "*CriOS/??.*",
-  "webp-animated",  // User agent for internal testing.
-  "*Firefox/*",
+    "*Chrome/??.*",
+    "*CriOS/??.*",
+    "webp-animated",  // User agent for internal testing.
+    "*Firefox/*",
 };
 
 const char* kWebpAnimatedBlacklist[] = {
-  "*Chrome/?.*",
-  "*Chrome/1?.*",
-  "*Chrome/2?.*",
-  "*Chrome/30.*",
-  "*Chrome/31.*",
-  "*CriOS/?.*",
-  "*CriOS/1?.*",
-  "*CriOS/2?.*",
-  "*CriOS/30.*",
-  "*CriOS/31.*",
-  "*Firefox/?.*",
-  "*Firefox/1?.*",
-  "*Firefox/2?.*",
-  "*Firefox/3?.*",
-  "*Firefox/4?.*",
-  "*Firefox/5?.*",
-  "*Firefox/60.*",
-  "*Firefox/61.*",
-  "*Firefox/62.*",
-  "*Firefox/63.*",
-  "*Firefox/64.*",
+    "*Chrome/?.*",   "*Chrome/1?.*",  "*Chrome/2?.*",  "*Chrome/30.*",
+    "*Chrome/31.*",  "*CriOS/?.*",    "*CriOS/1?.*",   "*CriOS/2?.*",
+    "*CriOS/30.*",   "*CriOS/31.*",   "*Firefox/?.*",  "*Firefox/1?.*",
+    "*Firefox/2?.*", "*Firefox/3?.*", "*Firefox/4?.*", "*Firefox/5?.*",
+    "*Firefox/60.*", "*Firefox/61.*", "*Firefox/62.*", "*Firefox/63.*",
+    "*Firefox/64.*",
 };
 
 const char* kInsertDnsPrefetchWhitelist[] = {
diff --git a/pagespeed/kernel/http/user_agent_matcher_test.cc b/pagespeed/kernel/http/user_agent_matcher_test.cc
index 6a2c23cbf2..c9a72dda72 100644
--- a/pagespeed/kernel/http/user_agent_matcher_test.cc
+++ b/pagespeed/kernel/http/user_agent_matcher_test.cc
@@ -317,8 +317,8 @@ TEST_F(UserAgentMatcherTest, SupportsWebpLosslessAlpha) {
       kPagespeedInsightsMobileUserAgent));
   EXPECT_TRUE(user_agent_matcher_->SupportsWebpLosslessAlpha(
       kPagespeedInsightsDesktopUserAgent));
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpLosslessAlpha(
-      kFirefox7UserAgent));
+  EXPECT_TRUE(
+      user_agent_matcher_->SupportsWebpLosslessAlpha(kFirefox7UserAgent));
 }
 
 TEST_F(UserAgentMatcherTest, DoesntSupportWebpLosslessAlpha) {
@@ -395,19 +395,13 @@ TEST_F(UserAgentMatcherTest, IE11NoDeferJs) {
 TEST_F(UserAgentMatcherTest, Mobilization) { VerifyMobilizationSupport(); }
 
 TEST_F(UserAgentMatcherTest, SupportsAnimatedWebp) {
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kTestingWebpAnimated));
-
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kChrome32UserAgent));
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kCriOS32UserAgent));
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kOpera19UserAgent));
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kChrome37UserAgent));
-  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(
-      kFirefox7UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kTestingWebpAnimated));
+
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kChrome32UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kCriOS32UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kOpera19UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kChrome37UserAgent));
+  EXPECT_TRUE(user_agent_matcher_->SupportsWebpAnimated(kFirefox7UserAgent));
 }
 
 TEST_F(UserAgentMatcherTest, DoesntSupportAnimatedWebp) {
diff --git a/pagespeed/kernel/http/user_agent_matcher_test_base.cc b/pagespeed/kernel/http/user_agent_matcher_test_base.cc
index 7a604358cd..8b7949705f 100644
--- a/pagespeed/kernel/http/user_agent_matcher_test_base.cc
+++ b/pagespeed/kernel/http/user_agent_matcher_test_base.cc
@@ -128,8 +128,10 @@ const char UserAgentMatcherTestBase::kFirefox42AndroidUserAgent[] =
     "Mozilla/5.0 (Android 5.0.1; Mobile; rv:42.0) Gecko/42.0 Firefox/42.0";
 const char UserAgentMatcherTestBase::kFirefox5UserAgent[] =
     "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0";
-const char UserAgentMatcherTestBase::kFirefox7UserAgent[] =
-    "Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/72.0"; //webp capable
+const char
+    UserAgentMatcherTestBase::kFirefox7UserAgent
+        [] = "Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 "
+             "Firefox/72.0";  //webp capable
 const char UserAgentMatcherTestBase::kFirefoxMobileUserAgent[] =
     "Mozilla/5.0 (Android; Mobile; rv:38.0) Gecko/38.0 Firefox/38.0";
 const char UserAgentMatcherTestBase::kFirefoxNokiaN800[] =

diff --git a/net/instaweb/genfiles/conf/pagespeed_libraries.conf b/net/instaweb/genfiles/conf/pagespeed_libraries.conf
--- a/net/instaweb/genfiles/conf/pagespeed_libraries.conf
+++ b/net/instaweb/genfiles/conf/pagespeed_libraries.conf
@@ -1234,6 +1234,14 @@
     ModPagespeedLibrary 88059 tJmcu2pzqbMS9jXP915aU //ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js
     # jquery/3.4.1/jquery.js:
     ModPagespeedLibrary 141767 YMjN_PDe4cETVTWLoSfvI //ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js
+    # jquery/3.5.1/jquery.min.js
+    ModPagespeedLibrary 89390 A8biqtTJrtWLYHojdWr-v //ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js
+    # jquery/3.5.1/jquery.js
+    ModPagespeedLibrary 143466 O426e3rTpm6_x4uifvdZK //ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.js
+    # jquery/3.7.1/jquery.min.js
+    ModPagespeedLibrary 110374 v2CJ7UaYy4JwqLDIrZUI //cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js
+    # jquery/3.7.1/jquery.js
+    ModPagespeedLibrary 183456 k1pnlgt4F1H8L7t3z95 //cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.js
     # jquerymobile/1.4.0/jquery.mobile.min.js:
     ModPagespeedLibrary 193066 pkv8dHWLVaOlDGcgh0PYe //ajax.googleapis.com/ajax/libs/jquerymobile/1.4.0/jquery.mobile.min.js
     # jquerymobile/1.4.0/jquery.mobile.js:
